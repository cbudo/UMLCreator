digraph UML_Diagram
{
rankdir=BT;

EncryptionOutputStream [
shape = "record", color="maroon", fillcolor=white, style=filled,
label = "{EncryptionOutputStream\n\<\<adaptor\>\>\n|
- encryptor : IEncryption\l
|+ init : void\l
+ write : void\l
}"];
EncryptionOutputStream -> FilterOutputStream [arrowhead="onormal", style="solid"];

FilterInputStream [
shape = "record", color="maroon", fillcolor=white, style=filled,
label = "{FilterInputStream\n\<\<target\>\>\n|
# in : InputStream\l
|# init : void\l
+ read : int\l
+ markSupported : boolean\l
+ available : int\l
+ reset : void\l
+ skip : long\l
+ close : void\l
+ mark : void\l
}"];

DecryptionInputStream [
shape = "record", color="maroon", fillcolor=white, style=filled,
label = "{DecryptionInputStream\n\<\<adaptor\>\>\n|
- decryptor : IDecryption\l
|+ init : void\l
+ read : int\l
}"];
DecryptionInputStream -> FilterInputStream [arrowhead="onormal", style="solid"];

FilterOutputStream [
shape = "record", color="maroon", fillcolor=white, style=filled,
label = "{FilterOutputStream\n\<\<target\>\>\n|
# out : OutputStream\l
|+ init : void\l
+ flush : void\l
+ write : void\l
+ close : void\l
}"];

SubstitutionCipher [
shape = "record", color="black", fillcolor=white, style=filled,
label = "{SubstitutionCipher\n|
- decryptionKey : char[]\l
- encryptionKey : char[]\l
|+ init : void\l
+ encrypt : char\l
+ decrypt : char\l
}"];
SubstitutionCipher -> IEncryption [arrowhead="onormal", style="dashed"];
SubstitutionCipher -> IDecryption [arrowhead="onormal", style="dashed"];

IEncryption [
shape = "record", color="maroon", fillcolor=white, style=filled,
label = "{\<\<interface\>\>\lIEncryption\n\<\<adaptee\>\>\n||+ encrypt : char\l
}"];

IDecryption [
shape = "record", color="maroon", fillcolor=white, style=filled,
label = "{\<\<interface\>\>\lIDecryption\n\<\<adaptee\>\>\n||+ decrypt : char\l
}"];
DecryptionInputStream -> FilterInputStream [label = "", arrowhead="vee", style="dashed"];
EncryptionOutputStream -> FilterOutputStream [label = "", arrowhead="vee", style="dashed"];
FilterOutputStream -> FilterOutputStream [label = "", arrowhead="vee", style="dashed"];
FilterInputStream -> FilterInputStream [label = "", arrowhead="vee", style="dashed"];
EncryptionOutputStream -> IEncryption [label = "\n\<\<adapts\>\>",arrowhead="vee", style="solid"];
DecryptionInputStream -> IDecryption [label = "\n\<\<adapts\>\>",arrowhead="vee", style="solid"];

}
