<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2040</x>
      <y>0</y>
      <w>416</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DataStorage::IDataStorage
--
--
~getAbstractClasses(): Collection&lt;AbstractJavaClassRep&gt;
~getClasses(): Collection&lt;AbstractJavaClassRep&gt;
~getInterfaces(): Collection&lt;AbstractJavaClassRep&gt;
~getClass(String className): AbstractJavaClassRep
~getInterfacade(String interfaceName): AbstractJavaClassRep
~addMethod(String cName, AbstractData methodRep): void
~addField(String cName, AbstractData fieldRep): void
~addClass(String name, AbstractJavaClassRep classRep): void
~addAbstractClass(String name, AbstractJavaClassRep abstractClassRep): void
~addInterfaces(String name, AbstractJavaClassRep interfaceRep): void
~getMethods(): MethodCall[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2040</x>
      <y>272</y>
      <w>416</w>
      <h>480</h>
    </coordinates>
    <panel_attributes>DataStorage::ParsedDataStorage
--
-storage: ParsedDataStorage
~classes: Map&lt;String, AbstractJavaClassRep&gt;
~interfaces: Map&lt;String, AbstractJavaClassRep&gt;
~abstractClasses: Map&lt;String, AbstractJavaClassRep&gt;
~usesRels: List&lt;IRelation&gt;
~associationRels: List&lt;IRelation&gt;
~methodCalls: List&lt;MethodCall&gt;
-max_depth = 5: int
--
-ParsedDataStorage(): ctor
+getInstance(): ParsedDataStorage
-destroySelf(): void
+getMax_depth(): int
+setMax_depth(int depth): void
+addClass(String name, AbstractJavaClassRep classRep): void
+getClass(String className): AbstractJavaClassRep
+addInterfaces(String name, AbstractJavaClassRep interfaceRep): void
+getMethods(): MethodCall[]
+addMethodCall(MethodCall mc): boolean
+getInterfacade(String interfaceName): AbstractJavaClassRep
+getClasses(): Collection&lt;AbstractJavaClassRep&gt;
+getInterfaces(): Collection&lt;AbstractJavaClassRep&gt;
+getAbstractClasses(): Collection&lt;AbstractJavaClassRep&gt;
+addMethod(String cName, AbstractData methodRep): void
+addField(String cName, AbstractData fieldRep): void
+addAbstractClass(String name, AbstractJavaClassRep abstractClassRep): void
+getAbstractClass(String className): AbstractJavaClassRep
+getInterface(String interfaceName): AbstractJavaClassRep
+getAssociationRels(): List&lt;IRelation&gt;
+getUsesRels(): List&lt;IRelation&gt;
+addUsesRelation(IRelation relation): boolean
+addAssociationRelation(IRelation relation): boolean
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>624</x>
      <y>3080</y>
      <w>576</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::AbstractClassRep
--
--
+AbstractClassRep(String name, int accessibility): ctor
+AbstractClassRep(String name, int accessibility, String extendsClassName): ctor
+AbstractClassRep(String name, int accessibility, List&lt;String&gt; implementsName): ctor
+AbstractClassRep(String name, int accessibility, List&lt;String&gt; implementsName, String extendsClassName): ctor
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>728</x>
      <y>2336</y>
      <w>416</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>/DataStorage.ParseClasses::AbstractData/
--
-name: String
-accessibility: int
-accessibilityTranslator = new HashMap&lt;Integer, String&gt;(): Map&lt;Integer, String&gt;
--
+AbstractData(String name, int accessibility): ctor
+getName(): String
+getAccessibility(): int
+getTranslatedAccessibility(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>816</x>
      <y>2872</y>
      <w>648</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>/DataStorage.ParseClasses::AbstractExtendableClassRep/
--
-extendedClassName: String
--
+AbstractExtendableClassRep(String name, int accessibility): ctor
+AbstractExtendableClassRep(String name, int accessibility, List&lt;String&gt; implementsNames): ctor
+AbstractExtendableClassRep(String name, int accessibility, String extendedClassName): ctor
+AbstractExtendableClassRep(String name, int accessibility, List&lt;String&gt; implementsNames, String extendedClassName): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1120</x>
      <y>2544</y>
      <w>472</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>/DataStorage.ParseClasses::AbstractJavaClassRep/
--
#methodsMap: Map&lt;String, AbstractData&gt;
#fieldsMap: Map&lt;String, AbstractData&gt;
-profileTags: List&lt;String&gt;
-implementsNames: List&lt;String&gt;
--
+AbstractJavaClassRep(String name, int accessibility): ctor
+AbstractJavaClassRep(String name, int accessibility, List&lt;String&gt; implementsNames): ctor
+addMethod(String methodName, AbstractData methodStructure): void
+getMethod(String methodName): AbstractData
+getMethodsMap(): Map&lt;String, AbstractData&gt;
+addField(String fieldName, AbstractData fieldRep): void
+getField(String fieldName): AbstractData
+getFieldsMap(): Map&lt;String, AbstractData&gt;
+addImplements(String interfaceName): void
+getImplementsList(): List&lt;String&gt;
+addProfileTag(String profile): void
+getProfileTags(): List&lt;String&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>456</x>
      <y>2544</y>
      <w>336</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>/DataStorage.ParseClasses::AbstractTypable/
--
-type: String
--
+AbstractTypable(String name, int accessibility, String type): ctor
+getType(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>336</x>
      <y>1912</y>
      <w>256</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::AssociationRelation
--
~from: String
~to: String
--
+AssociationRelation(String to, String from): ctor
+getTo(): String
+getFrom(): String
+accept(IVisitor v): void
+equals(Object o): boolean
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1248</x>
      <y>3080</y>
      <w>536</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::ClassRep
--
-publicStaticGetInstatnce = false: boolean
-privateSingletonInit = false: boolean
-privateSingletonField = false: boolean
--
+ClassRep(String name, int accessibility): ctor
+ClassRep(String name, int accessibility, String extendsClassName): ctor
+ClassRep(String name, int accessibility, List&lt;String&gt; implementsName): ctor
+ClassRep(String name, int accessibility, List&lt;String&gt; implementsName, String extendsClassName): ctor
+accept(IVisitor v): void
+setPublicStaticGetInstatnce(boolean inst): void
+setPrivateSingletonInit(boolean inst): void
+setPrivateSingletonField(boolean inst): void
+isSingleton(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>112</x>
      <y>2944</y>
      <w>392</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::FieldRep
--
-className: String
--
+FieldRep(String name, int accessibility, String type, String className): ctor
+getClassName(): String
+getSimpleClassName(): String
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1520</x>
      <y>2872</y>
      <w>376</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::InterfaceRep
--
--
+InterfaceRep(String name, int accessibility): ctor
+InterfaceRep(String name, int accessibility, List&lt;String&gt; interfaces): ctor
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>504</x>
      <y>1696</y>
      <w>184</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DataStorage.ParseClasses::IRelation
--
--
~getTo(): String
~getFrom(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>976</x>
      <y>1696</y>
      <w>552</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::MethodCall
--
-fullClassName: String
-callingClass: String
-calledClass: String
-methodName: String
-args: String[]
-retType: String
--
+MethodCall(String callingClass, String calledClass, String methodName, String[] args, String retType): ctor
+getFullClassName(): String
+setFullClassName(String fullClassName): void
+GetCallingClass(): String
+GetCalledClass(): String
+GetMethodName(): String
+GetArgs(): String[]
+getRetType(): String
+acceptSequenceClass(SequenceVisitor methodVisitor, StringBuilder classes, StringBuilder methods): void
+equals(MethodCall method): boolean
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>112</x>
      <y>2720</y>
      <w>408</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::MethodRep
--
-usesRelations: List&lt;String&gt;
-className: String
--
+MethodRep(String name, int accessibility, String type, String className): ctor
+addUsesRelation(String className): void
+getUsesRelations(): List&lt;String&gt;
+getClassName(): String
+getSimpleClassName(): String
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>688</x>
      <y>1912</y>
      <w>224</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::UsesRelation
--
-from: String
-to: String
--
+UsesRelation(String to, String from): ctor
+getTo(): String
+getFrom(): String
+accept(IVisitor v): void
+equals(Object o): boolean
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2264</x>
      <y>2176</y>
      <w>536</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Visitors::ClassDeclarationVisitor
--
#className: String
--
+ClassDeclarationVisitor(int api, String className): ctor
+visit(int version, int access, String name, String signature, String superName, String[] interfaces): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2280</x>
      <y>1976</y>
      <w>480</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Visitors::ClassFieldVisitor
--
#className: String
--
+ClassFieldVisitor(int api): ctor
+ClassFieldVisitor(int api, ClassVisitor decorated, String className): ctor
+visitField(int access, String name, String desc, String signature, Object value): FieldVisitor
-getInnermostClass(String someType): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1976</x>
      <y>1304</y>
      <w>264</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Visitors::DesignParser
--
--
+main(String[] args): void
-isMethodSignature(String className): boolean
-getGenerationType(String arg): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>856</x>
      <y>2160</y>
      <w>120</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Visitors::ITraverser
--
--
~accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3272</x>
      <y>2984</y>
      <w>160</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Visitors::IVisitMethod
--
--
~execute(ITraverser t): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3320</x>
      <y>2400</y>
      <w>360</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Visitors::IVisitor
--
--
~preVisit(ITraverser t): void
~visit(ITraverser t): void
~postVisit(ITraverser t): void
~addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
~removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3520</x>
      <y>2984</y>
      <w>296</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Visitors::LookupKey
--
~visitType: VisitType
~clazz: Class&lt;?&gt;
--
+LookupKey(VisitType visitType, Class&lt;?&gt; clazz): ctor
+equals(Object obj): boolean
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3088</x>
      <y>2096</y>
      <w>264</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>Visitors.OutputStreams::SequenceOutputStream
--
-visitor: IVisitor
-classes: StringBuilder
-methods: StringBuilder
-visitedClasses: Set
--
+SequenceOutputStream(OutputStream out): ctor
+write(String m): void
+write(ParsedDataStorage storage): void
+setupClassVisit(): void
-addClass(String s, StringBuilder classes): void
-addMethod(MethodCall mc, StringBuilder sb): void
-appendArgs(String[] args, StringBuilder sb): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3400</x>
      <y>2096</y>
      <w>240</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>Visitors.OutputStreams::UMLOutputStream
--
-visitor: IVisitor
--
+UMLOutputStream(OutputStream out): ctor
-write(String m): void
+write(ParsedDataStorage storage): void
+setupVisitAbstractClass(): void
+setupVisitClass(): void
+setupVisitInterface(): void
+setupVisitMethod(): void
+setupVisitField(): void
+setupPrevisit(): void
+setupPostVisit(): void
+setupRelationVisit(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3680</x>
      <y>1920</y>
      <w>224</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>Visitors.PatternVisitors::SingletonVisitor
--
-visitor: IVisitor
--
+SingletonVisitor(): ctor
+visitAll(ParsedDataStorage data): void
-setupMethodVisit(): void
-setupMethodPostVisit(): void
-setupFieldVisit(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2200</x>
      <y>2840</y>
      <w>680</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>Visitors.SequenceVisitors::SequenceClassMethodVisitor
--
~className: String
~desiredMethodName: String
~depth: int
--
+SequenceClassMethodVisitor(int api): ctor
+SequenceClassMethodVisitor(int api, ClassVisitor decorated, String className): ctor
+SequenceClassMethodVisitor(int api, ClassVisitor decorated, String className, String desiredMethodName, int currentDepth): ctor
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addReturnType(String desc): String
~addArguments(String desc): String[]
-getInnermostClass(String someType): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2280</x>
      <y>3088</y>
      <w>528</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>Visitors.SequenceVisitors::SequenceMethodVisitor
--
-depth: int
-callingClassName: String
-fullCallingClassName: String
--
+SequenceMethodVisitor(int i, int depth): ctor
+SequenceMethodVisitor(int i, MethodVisitor methodVisitor, int depth, String callingClassName): ctor
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
-downTheRabbitHole(String fullCalledClassName, String desiredMethodName): void
-getCalledClass(String n): String
-getArgs(String desc): String[]
-getRetType(String desc, String mname): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2224</x>
      <y>2312</y>
      <w>656</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>Visitors.UMLVisitors::UMLClassMethodVisitor
--
~className: String
~desiredMethodName: String
~depth: int
--
+UMLClassMethodVisitor(int api): ctor
+UMLClassMethodVisitor(int api, ClassVisitor decorated, String className): ctor
+UMLClassMethodVisitor(int api, ClassVisitor decorated, String className, String desiredMethodName, int currentDepth): ctor
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addReturnType(String desc): String
~addArguments(String desc): String[]
-getInnermostClass(String someType): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2320</x>
      <y>2568</y>
      <w>448</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>Visitors.UMLVisitors::UMLMethodVisitor
--
-callingClassName: String
-fullCallingClassName: String
--
+UMLMethodVisitor(int i): ctor
+UMLMethodVisitor(int i, MethodVisitor methodVisitor, String callingClassName): ctor
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
-getCalledClass(String n): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3320</x>
      <y>2584</y>
      <w>360</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Visitors::Visitor
--
~keyToVisitMethodMap: Map&lt;LookupKey, IVisitMethod&gt;
--
+Visitor(): ctor
-doVisit(VisitType vType, ITraverser t): void
+preVisit(ITraverser t): void
+visit(ITraverser t): void
+postVisit(ITraverser t): void
+addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
+removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2240</x>
      <y>200</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2696</x>
      <y>1832</y>
      <w>264</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Generation.Generation::GeneratorFactory
--
--
+GeneratorFactory(): ctor
+getGenerator(String generatorType): IGenerator
--
layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2408</x>
      <y>1720</y>
      <w>224</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Generation.Generation::GraphGenerator
--
--
+buildUMLClassDiagram(): String
+getOutputType(): String
+Generate(): String
+parse(List&lt;String&gt; args): void
--

layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2416</x>
      <y>1552</y>
      <w>200</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Generation.Generation::IGenerator
--
--
~getOutputType(): String
~Generate(): String
~parse(List&lt;String&gt; args): void
--

layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2416</x>
      <y>1824</y>
      <w>248</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Generation.Generation::SequenceGenerator
--
--
+getOutputType(): String
+Generate(): String
+parse(List&lt;String&gt; args): void
--

layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2512</x>
      <y>1648</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2296</x>
      <y>1752</y>
      <w>136</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=.
layer=2</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;10.0;10.0;140.0;150.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3496</x>
      <y>2520</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>512</x>
      <y>2624</y>
      <w>128</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;140.0;220.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>496</x>
      <y>2792</y>
      <w>144</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>160.0;10.0;160.0;260.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>912</x>
      <y>2224</y>
      <w>24</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>968</x>
      <y>1968</y>
      <w>280</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;280.0;330.0;280.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>608</x>
      <y>1528</y>
      <w>336</w>
      <h>648</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>400.0;790.0;400.0;10.0;10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>448</x>
      <y>1776</y>
      <w>184</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;210.0;70.0;10.0;70.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>608</x>
      <y>1824</y>
      <w>224</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;260.0;10.0;260.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>616</x>
      <y>2472</y>
      <w>336</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>400.0;10.0;400.0;50.0;10.0;50.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>928</x>
      <y>2504</y>
      <w>472</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;570.0;10.0;570.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3496</x>
      <y>2736</y>
      <w>192</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>220.0;310.0;220.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3328</x>
      <y>2736</y>
      <w>192</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;310.0;10.0;90.0;220.0;90.0;220.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2520</x>
      <y>2256</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2104</x>
      <y>2280</y>
      <w>472</w>
      <h>576</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>530.0;10.0;10.0;10.0;20.0;590.0;570.0;590.0;570.0;700.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2520</x>
      <y>2088</y>
      <w>24</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2528</x>
      <y>2488</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2552</x>
      <y>3016</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1112</x>
      <y>2800</y>
      <w>248</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;290.0;50.0;10.0;50.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1336</x>
      <y>2832</y>
      <w>392</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;470.0;10.0;470.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>888</x>
      <y>2976</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>280.0;10.0;280.0;50.0;10.0;50.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1104</x>
      <y>3008</y>
      <w>432</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;520.0;10.0;520.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3208</x>
      <y>2288</y>
      <w>312</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>370.0;140.0;370.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3496</x>
      <y>2320</y>
      <w>592</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;50.0;720.0;50.0;720.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3496</x>
      <y>2304</y>
      <w>24</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2232</x>
      <y>1848</y>
      <w>304</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;10.0;10.0;120.0;360.0;120.0;360.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2232</x>
      <y>1784</y>
      <w>192</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2656</x>
      <y>1872</y>
      <w>584</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;710.0;10.0;710.0;280.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2624</x>
      <y>1736</y>
      <w>896</w>
      <h>376</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;1100.0;20.0;1100.0;450.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3496</x>
      <y>1744</y>
      <w>312</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;10.0;370.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1776</x>
      <y>1336</y>
      <w>216</w>
      <h>1904</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;2360.0;200.0;2360.0;180.0;10.0;250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2096</x>
      <y>744</y>
      <w>24</w>
      <h>576</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;700.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1584</x>
      <y>480</y>
      <w>472</w>
      <h>2176</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;2700.0;120.0;2700.0;120.0;10.0;570.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2528</x>
      <y>1664</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2232</x>
      <y>1344</y>
      <w>288</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;260.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3912</x>
      <y>2200</y>
      <w>280</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>/Visitors.PatternVisitors::AbstractVisitorTemplate/
--
-visitor: IVisitor
-data : IDataStorage
--
+ init AbstractVisitorTemplater(IDataStorage data)
+abstract performSetup() : void
+abstract performVisits(IDataStorage data) : void
+abstract performAnalysis() : void 
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3784</x>
      <y>2040</y>
      <w>184</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0;210.0;150.0;210.0;200.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3960</x>
      <y>1920</y>
      <w>224</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>Visitors.PatternVisitors::AdaptorVisitor
--
-visitor: IVisitor
--
+AdaptornVisitor(): ctor
+visitAll(ParsedDataStorage data): void
-setupMethodVisit(): void
-setupClassVisit(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4000</x>
      <y>2040</y>
      <w>80</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;80.0;150.0;10.0;150.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3504</x>
      <y>1744</y>
      <w>584</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;710.0;10.0;710.0;220.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4224</x>
      <y>1920</y>
      <w>224</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>Visitors.PatternVisitors::DecoratorVisitor
--
-visitor: IVisitor
--
+AdaptornVisitor(): ctor
+visitAll(ParsedDataStorage data): void
-setupMethodVisit(): void
-setupClassVisit(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3496</x>
      <y>1744</y>
      <w>848</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;1040.0;10.0;1040.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4088</x>
      <y>2040</y>
      <w>264</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;310.0;150.0;10.0;150.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1920</y>
      <w>272</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DataStorage.ParseClasses::NameRelationDecorator
--
- String arrowName
--
~getTo(): String
~getFrom(): String
+getArrowName() : String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>224</x>
      <y>1736</y>
      <w>296</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>350.0;10.0;10.0;10.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>160</x>
      <y>1720</y>
      <w>360</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;250.0;10.0;10.0;430.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>528</x>
      <y>2656</y>
      <w>608</w>
      <h>984</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>740.0;10.0;300.0;10.0;300.0;490.0;10.0;490.0;10.0;1210.0;180.0;1210.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>3592</y>
      <w>472</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>PatternTypeClassDecorator
--
- classToDecorate : AbstractJavaClassRep
--
+AbstractJavaClassRep(String name, int accessibility): ctor
+AbstractJavaClassRep(String name, int accessibility, List&lt;String&gt; implementsNames): ctor
+addMethod(String methodName, AbstractData methodStructure): void
+getMethod(String methodName): AbstractData
+getMethodsMap(): Map&lt;String, AbstractData&gt;
+addField(String fieldName, AbstractData fieldRep): void
+getField(String fieldName): AbstractData
+getFieldsMap(): Map&lt;String, AbstractData&gt;
+addImplements(String interfaceName): void
+getImplementsList(): List&lt;String&gt;
+addProfileTag(String profile): void
+getProfileTags(): List&lt;String&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>3784</y>
      <w>184</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;210.0;80.0;10.0;80.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>688</x>
      <y>3920</y>
      <w>128</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>DecoratorDecorator
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>3840</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>3920</y>
      <w>128</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>ComponentDecorator
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>3840</y>
      <w>208</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;10.0;240.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1048</x>
      <y>3920</y>
      <w>208</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>SingletonDecorator
--
- privateConstructor : boolean
- privateField : boolean
- publicStaticConstructor : boolean
--
+ isSingleton()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2632</x>
      <y>1024</y>
      <w>288</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>/ParserViewer/
--
void Analyze()
void performSetup();
void getClassesFromInputFile();
void getSupplementaryClasses();
void parseASM();
void runPhases();
void exit();
void setPropertiesFile(String filePath) throws IOException;
Iterator&lt;String&gt; getDecorators();
Iterator&lt;String&gt; getSingletons();
Iterator&lt;String&gt; getComponents();
 String getOutputDirectory();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2632</x>
      <y>584</y>
      <w>280</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>GUI
--
private Stage primaryStage
private Pane result
private IParserViewer parserViewer
private final Properties properties
final Button config
final Button analyze
final ProgressBar progressBar
final Text text
final ImageView img
--
+ static void main(String[] args)
+void initStartPage() 
- void AnalyzeClasses() 
- void initResults() 
- void updateImage(ObservableList selectedItems) 
- boolean isCompletelyWritten(File file) 
- MenuBar getMenu() 
- Map&lt;String, Iterator&lt;String&gt;&gt; getPatternClasses() 
- void exportImage() 
+ Stage getPrimaryStage() 
+ void start(Stage primaryStage) throws Exception 
+ static void openWebpage(URI uri) </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2712</x>
      <y>880</y>
      <w>24</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;180.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2408</x>
      <y>1320</y>
      <w>744</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>DataViewer
--

--
 public static void listFilesForFolder(final File folder, String basePath, Map&lt;String, FileInputStream&gt; classesToParse) throws FileNotFoundException</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2768</x>
      <y>1200</y>
      <w>24</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2232</x>
      <y>1040</y>
      <w>416</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>500.0;10.0;10.0;380.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2656</x>
      <y>1528</y>
      <w>544</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>PhaseHandler
--
private List&lt;String&gt; phases;
private String[] phaseClasses;
private Map&lt;String, PhaseExecution&gt; phasesToActions;
--
+ PhaseHandler(String[] phases, String[] phaseClasses, Map&lt;String, PhaseExecution&gt; phasesToActions) {
+ void generateAllPhaseClasses()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2920</x>
      <y>1440</y>
      <w>744</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>FileHandler
--

--
public static void listFilesForFolder(final File folder, String basePath, Map&lt;String, FileInputStream&gt; classesToParse) throws FileNotFoundException</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2768</x>
      <y>1368</y>
      <w>496</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>600.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2768</x>
      <y>1368</y>
      <w>160</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>180.0;200.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3016</x>
      <y>1168</y>
      <w>128</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>/PhaseExecution/
--
+ void execute()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2912</x>
      <y>1120</y>
      <w>184</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>210.0;60.0;210.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
