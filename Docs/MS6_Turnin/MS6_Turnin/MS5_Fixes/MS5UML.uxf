<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1834</x>
      <y>0</y>
      <w>364</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DataStorage::IDataStorage
--
--
~getAbstractClasses(): Collection&lt;AbstractJavaClassRep&gt;
~getClasses(): Collection&lt;AbstractJavaClassRep&gt;
~getInterfaces(): Collection&lt;AbstractJavaClassRep&gt;
~getClass(String className): AbstractJavaClassRep
~getInterfacade(String interfaceName): AbstractJavaClassRep
~addMethod(String cName, AbstractData methodRep): void
~addField(String cName, AbstractData fieldRep): void
~addClass(String name, AbstractJavaClassRep classRep): void
~addAbstractClass(String name, AbstractJavaClassRep abstractClassRep): void
~addInterfaces(String name, AbstractJavaClassRep interfaceRep): void
~getMethods(): MethodCall[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1834</x>
      <y>238</y>
      <w>364</w>
      <h>420</h>
    </coordinates>
    <panel_attributes>DataStorage::ParsedDataStorage
--
-storage: ParsedDataStorage
~classes: Map&lt;String, AbstractJavaClassRep&gt;
~interfaces: Map&lt;String, AbstractJavaClassRep&gt;
~abstractClasses: Map&lt;String, AbstractJavaClassRep&gt;
~usesRels: List&lt;IRelation&gt;
~associationRels: List&lt;IRelation&gt;
~methodCalls: List&lt;MethodCall&gt;
-max_depth = 5: int
--
-ParsedDataStorage(): ctor
+getInstance(): ParsedDataStorage
-destroySelf(): void
+getMax_depth(): int
+setMax_depth(int depth): void
+addClass(String name, AbstractJavaClassRep classRep): void
+getClass(String className): AbstractJavaClassRep
+addInterfaces(String name, AbstractJavaClassRep interfaceRep): void
+getMethods(): MethodCall[]
+addMethodCall(MethodCall mc): boolean
+getInterfacade(String interfaceName): AbstractJavaClassRep
+getClasses(): Collection&lt;AbstractJavaClassRep&gt;
+getInterfaces(): Collection&lt;AbstractJavaClassRep&gt;
+getAbstractClasses(): Collection&lt;AbstractJavaClassRep&gt;
+addMethod(String cName, AbstractData methodRep): void
+addField(String cName, AbstractData fieldRep): void
+addAbstractClass(String name, AbstractJavaClassRep abstractClassRep): void
+getAbstractClass(String className): AbstractJavaClassRep
+getInterface(String interfaceName): AbstractJavaClassRep
+getAssociationRels(): List&lt;IRelation&gt;
+getUsesRels(): List&lt;IRelation&gt;
+addUsesRelation(IRelation relation): boolean
+addAssociationRelation(IRelation relation): boolean
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>595</x>
      <y>2695</y>
      <w>504</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::AbstractClassRep
--
--
+AbstractClassRep(String name, int accessibility): ctor
+AbstractClassRep(String name, int accessibility, String extendsClassName): ctor
+AbstractClassRep(String name, int accessibility, List&lt;String&gt; implementsName): ctor
+AbstractClassRep(String name, int accessibility, List&lt;String&gt; implementsName, String extendsClassName): ctor
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>686</x>
      <y>2044</y>
      <w>364</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>/DataStorage.ParseClasses::AbstractData/
--
-name: String
-accessibility: int
-accessibilityTranslator = new HashMap&lt;Integer, String&gt;(): Map&lt;Integer, String&gt;
--
+AbstractData(String name, int accessibility): ctor
+getName(): String
+getAccessibility(): int
+getTranslatedAccessibility(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>763</x>
      <y>2513</y>
      <w>567</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>/DataStorage.ParseClasses::AbstractExtendableClassRep/
--
-extendedClassName: String
--
+AbstractExtendableClassRep(String name, int accessibility): ctor
+AbstractExtendableClassRep(String name, int accessibility, List&lt;String&gt; implementsNames): ctor
+AbstractExtendableClassRep(String name, int accessibility, String extendedClassName): ctor
+AbstractExtendableClassRep(String name, int accessibility, List&lt;String&gt; implementsNames, String extendedClassName): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1029</x>
      <y>2226</y>
      <w>413</w>
      <h>231</h>
    </coordinates>
    <panel_attributes>/DataStorage.ParseClasses::AbstractJavaClassRep/
--
#methodsMap: Map&lt;String, AbstractData&gt;
#fieldsMap: Map&lt;String, AbstractData&gt;
-profileTags: List&lt;String&gt;
-implementsNames: List&lt;String&gt;
--
+AbstractJavaClassRep(String name, int accessibility): ctor
+AbstractJavaClassRep(String name, int accessibility, List&lt;String&gt; implementsNames): ctor
+addMethod(String methodName, AbstractData methodStructure): void
+getMethod(String methodName): AbstractData
+getMethodsMap(): Map&lt;String, AbstractData&gt;
+addField(String fieldName, AbstractData fieldRep): void
+getField(String fieldName): AbstractData
+getFieldsMap(): Map&lt;String, AbstractData&gt;
+addImplements(String interfaceName): void
+getImplementsList(): List&lt;String&gt;
+addProfileTag(String profile): void
+getProfileTags(): List&lt;String&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>448</x>
      <y>2226</y>
      <w>294</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>/DataStorage.ParseClasses::AbstractTypable/
--
-type: String
--
+AbstractTypable(String name, int accessibility, String type): ctor
+getType(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>343</x>
      <y>1673</y>
      <w>224</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::AssociationRelation
--
~from: String
~to: String
--
+AssociationRelation(String to, String from): ctor
+getTo(): String
+getFrom(): String
+accept(IVisitor v): void
+equals(Object o): boolean
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1141</x>
      <y>2695</y>
      <w>469</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::ClassRep
--
-publicStaticGetInstatnce = false: boolean
-privateSingletonInit = false: boolean
-privateSingletonField = false: boolean
--
+ClassRep(String name, int accessibility): ctor
+ClassRep(String name, int accessibility, String extendsClassName): ctor
+ClassRep(String name, int accessibility, List&lt;String&gt; implementsName): ctor
+ClassRep(String name, int accessibility, List&lt;String&gt; implementsName, String extendsClassName): ctor
+accept(IVisitor v): void
+setPublicStaticGetInstatnce(boolean inst): void
+setPrivateSingletonInit(boolean inst): void
+setPrivateSingletonField(boolean inst): void
+isSingleton(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>147</x>
      <y>2576</y>
      <w>343</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::FieldRep
--
-className: String
--
+FieldRep(String name, int accessibility, String type, String className): ctor
+getClassName(): String
+getSimpleClassName(): String
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1379</x>
      <y>2513</y>
      <w>329</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::InterfaceRep
--
--
+InterfaceRep(String name, int accessibility): ctor
+InterfaceRep(String name, int accessibility, List&lt;String&gt; interfaces): ctor
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>1484</y>
      <w>161</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DataStorage.ParseClasses::IRelation
--
--
~getTo(): String
~getFrom(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>903</x>
      <y>1484</y>
      <w>483</w>
      <h>245</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::MethodCall
--
-fullClassName: String
-callingClass: String
-calledClass: String
-methodName: String
-args: String[]
-retType: String
--
+MethodCall(String callingClass, String calledClass, String methodName, String[] args, String retType): ctor
+getFullClassName(): String
+setFullClassName(String fullClassName): void
+GetCallingClass(): String
+GetCalledClass(): String
+GetMethodName(): String
+GetArgs(): String[]
+getRetType(): String
+acceptSequenceClass(SequenceVisitor methodVisitor, StringBuilder classes, StringBuilder methods): void
+equals(MethodCall method): boolean
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>147</x>
      <y>2380</y>
      <w>357</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::MethodRep
--
-usesRelations: List&lt;String&gt;
-className: String
--
+MethodRep(String name, int accessibility, String type, String className): ctor
+addUsesRelation(String className): void
+getUsesRelations(): List&lt;String&gt;
+getClassName(): String
+getSimpleClassName(): String
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>651</x>
      <y>1673</y>
      <w>196</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>DataStorage.ParseClasses::UsesRelation
--
-from: String
-to: String
--
+UsesRelation(String to, String from): ctor
+getTo(): String
+getFrom(): String
+accept(IVisitor v): void
+equals(Object o): boolean
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2030</x>
      <y>1904</y>
      <w>469</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>Visitors::ClassDeclarationVisitor
--
#className: String
--
+ClassDeclarationVisitor(int api, String className): ctor
+visit(int version, int access, String name, String signature, String superName, String[] interfaces): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2044</x>
      <y>1729</y>
      <w>420</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>Visitors::ClassFieldVisitor
--
#className: String
--
+ClassFieldVisitor(int api): ctor
+ClassFieldVisitor(int api, ClassVisitor decorated, String className): ctor
+visitField(int access, String name, String desc, String signature, Object value): FieldVisitor
-getInnermostClass(String someType): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1778</x>
      <y>1141</y>
      <w>231</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>Visitors::DesignParser
--
--
+main(String[] args): void
-isMethodSignature(String className): boolean
-getGenerationType(String arg): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>798</x>
      <y>1890</y>
      <w>105</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Visitors::ITraverser
--
--
~accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2912</x>
      <y>2611</y>
      <w>140</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Visitors::IVisitMethod
--
--
~execute(ITraverser t): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2954</x>
      <y>2100</y>
      <w>315</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Visitors::IVisitor
--
--
~preVisit(ITraverser t): void
~visit(ITraverser t): void
~postVisit(ITraverser t): void
~addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
~removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3129</x>
      <y>2611</y>
      <w>259</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>Visitors::LookupKey
--
~visitType: VisitType
~clazz: Class&lt;?&gt;
--
+LookupKey(VisitType visitType, Class&lt;?&gt; clazz): ctor
+equals(Object obj): boolean
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2751</x>
      <y>1834</y>
      <w>231</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>Visitors.OutputStreams::SequenceOutputStream
--
-visitor: IVisitor
-classes: StringBuilder
-methods: StringBuilder
-visitedClasses: Set
--
+SequenceOutputStream(OutputStream out): ctor
+write(String m): void
+write(ParsedDataStorage storage): void
+setupClassVisit(): void
-addClass(String s, StringBuilder classes): void
-addMethod(MethodCall mc, StringBuilder sb): void
-appendArgs(String[] args, StringBuilder sb): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3024</x>
      <y>1834</y>
      <w>210</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>Visitors.OutputStreams::UMLOutputStream
--
-visitor: IVisitor
--
+UMLOutputStream(OutputStream out): ctor
-write(String m): void
+write(ParsedDataStorage storage): void
+setupVisitAbstractClass(): void
+setupVisitClass(): void
+setupVisitInterface(): void
+setupVisitMethod(): void
+setupVisitField(): void
+setupPrevisit(): void
+setupPostVisit(): void
+setupRelationVisit(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3269</x>
      <y>1680</y>
      <w>196</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Visitors.PatternVisitors::SingletonVisitor
--
-visitor: IVisitor
--
+SingletonVisitor(): ctor
+visitAll(ParsedDataStorage data): void
-setupMethodVisit(): void
-setupMethodPostVisit(): void
-setupFieldVisit(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1974</x>
      <y>2485</y>
      <w>595</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>Visitors.SequenceVisitors::SequenceClassMethodVisitor
--
~className: String
~desiredMethodName: String
~depth: int
--
+SequenceClassMethodVisitor(int api): ctor
+SequenceClassMethodVisitor(int api, ClassVisitor decorated, String className): ctor
+SequenceClassMethodVisitor(int api, ClassVisitor decorated, String className, String desiredMethodName, int currentDepth): ctor
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addReturnType(String desc): String
~addArguments(String desc): String[]
-getInnermostClass(String someType): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2044</x>
      <y>2702</y>
      <w>462</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>Visitors.SequenceVisitors::SequenceMethodVisitor
--
-depth: int
-callingClassName: String
-fullCallingClassName: String
--
+SequenceMethodVisitor(int i, int depth): ctor
+SequenceMethodVisitor(int i, MethodVisitor methodVisitor, int depth, String callingClassName): ctor
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
-downTheRabbitHole(String fullCalledClassName, String desiredMethodName): void
-getCalledClass(String n): String
-getArgs(String desc): String[]
-getRetType(String desc, String mname): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1995</x>
      <y>2023</y>
      <w>574</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>Visitors.UMLVisitors::UMLClassMethodVisitor
--
~className: String
~desiredMethodName: String
~depth: int
--
+UMLClassMethodVisitor(int api): ctor
+UMLClassMethodVisitor(int api, ClassVisitor decorated, String className): ctor
+UMLClassMethodVisitor(int api, ClassVisitor decorated, String className, String desiredMethodName, int currentDepth): ctor
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addReturnType(String desc): String
~addArguments(String desc): String[]
-getInnermostClass(String someType): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2079</x>
      <y>2247</y>
      <w>392</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Visitors.UMLVisitors::UMLMethodVisitor
--
-callingClassName: String
-fullCallingClassName: String
--
+UMLMethodVisitor(int i): ctor
+UMLMethodVisitor(int i, MethodVisitor methodVisitor, String callingClassName): ctor
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
-getCalledClass(String n): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2954</x>
      <y>2261</y>
      <w>315</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Visitors::Visitor
--
~keyToVisitMethodMap: Map&lt;LookupKey, IVisitMethod&gt;
--
+Visitor(): ctor
-doVisit(VisitType vType, ITraverser t): void
+preVisit(ITraverser t): void
+visit(ITraverser t): void
+postVisit(ITraverser t): void
+addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
+removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2009</x>
      <y>175</y>
      <w>21</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2408</x>
      <y>1603</y>
      <w>231</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>Generation.Generation::GeneratorFactory
--
--
+GeneratorFactory(): ctor
+getGenerator(String generatorType): IGenerator
--
layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2156</x>
      <y>1505</y>
      <w>196</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>Generation.Generation::GraphGenerator
--
--
+buildUMLClassDiagram(): String
+getOutputType(): String
+Generate(): String
+parse(List&lt;String&gt; args): void
--

layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2163</x>
      <y>1358</y>
      <w>175</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Generation.Generation::IGenerator
--
--
~getOutputType(): String
~Generate(): String
~parse(List&lt;String&gt; args): void
--

layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2163</x>
      <y>1596</y>
      <w>217</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>Generation.Generation::SequenceGenerator
--
--
+getOutputType(): String
+Generate(): String
+parse(List&lt;String&gt; args): void
--

layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2247</x>
      <y>1442</y>
      <w>21</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2058</x>
      <y>1533</y>
      <w>119</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=.
layer=2</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;10.0;10.0;140.0;150.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1302</x>
      <y>2870</y>
      <w>126</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
layer=2</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3108</x>
      <y>2205</y>
      <w>21</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>497</x>
      <y>2296</y>
      <w>112</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;140.0;220.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>483</x>
      <y>2443</y>
      <w>126</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>160.0;10.0;160.0;260.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>847</x>
      <y>1946</y>
      <w>21</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>1722</y>
      <w>245</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;280.0;330.0;280.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>581</x>
      <y>1337</y>
      <w>294</w>
      <h>567</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>400.0;790.0;400.0;10.0;10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>441</x>
      <y>1554</y>
      <w>161</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;210.0;70.0;10.0;70.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>581</x>
      <y>1596</y>
      <w>196</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;260.0;10.0;260.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>588</x>
      <y>2163</y>
      <w>294</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>400.0;10.0;400.0;50.0;10.0;50.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>861</x>
      <y>2191</y>
      <w>413</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;570.0;10.0;570.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3108</x>
      <y>2394</y>
      <w>168</w>
      <h>231</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>220.0;310.0;220.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2961</x>
      <y>2394</y>
      <w>168</w>
      <h>231</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;310.0;10.0;90.0;220.0;90.0;220.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2254</x>
      <y>1974</y>
      <w>21</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1890</x>
      <y>1995</y>
      <w>413</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>530.0;10.0;10.0;10.0;20.0;590.0;570.0;590.0;570.0;700.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2254</x>
      <y>1827</y>
      <w>21</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2261</x>
      <y>2177</y>
      <w>21</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2282</x>
      <y>2639</y>
      <w>21</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1022</x>
      <y>2450</y>
      <w>217</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;290.0;50.0;10.0;50.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1218</x>
      <y>2478</y>
      <w>343</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;470.0;10.0;470.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>826</x>
      <y>2604</y>
      <w>210</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>280.0;10.0;280.0;50.0;10.0;50.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1015</x>
      <y>2632</y>
      <w>378</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;520.0;10.0;520.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2856</x>
      <y>2002</y>
      <w>273</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>370.0;140.0;370.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3108</x>
      <y>2030</y>
      <w>518</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;50.0;720.0;50.0;720.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3108</x>
      <y>2016</y>
      <w>21</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2002</x>
      <y>1617</y>
      <w>266</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;10.0;10.0;120.0;360.0;120.0;360.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2002</x>
      <y>1561</y>
      <w>168</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2373</x>
      <y>1638</y>
      <w>511</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;710.0;10.0;710.0;280.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2345</x>
      <y>1519</y>
      <w>784</w>
      <h>329</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;1100.0;20.0;1100.0;450.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3108</x>
      <y>1526</y>
      <w>273</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;10.0;370.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1603</x>
      <y>1169</y>
      <w>189</w>
      <h>1666</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;2360.0;200.0;2360.0;180.0;10.0;250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1883</x>
      <y>651</y>
      <w>21</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;700.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1435</x>
      <y>420</y>
      <w>413</w>
      <h>1904</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;2700.0;120.0;2700.0;120.0;10.0;570.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2261</x>
      <y>1456</y>
      <w>21</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2002</x>
      <y>1176</y>
      <w>252</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;260.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3472</x>
      <y>1925</y>
      <w>245</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>/Visitors.PatternVisitors::AbstractVisitorTemplate/
--
-visitor: IVisitor
-data : IDataStorage
--
+ init AbstractVisitorTemplater(IDataStorage data)
+abstract performSetup() : void
+abstract performVisits(IDataStorage data) : void
+abstract performAnalysis() : void 
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3360</x>
      <y>1785</y>
      <w>161</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0;210.0;150.0;210.0;200.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3514</x>
      <y>1680</y>
      <w>196</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Visitors.PatternVisitors::AdaptorVisitor
--
-visitor: IVisitor
--
+AdaptornVisitor(): ctor
+visitAll(ParsedDataStorage data): void
-setupMethodVisit(): void
-setupClassVisit(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3549</x>
      <y>1785</y>
      <w>70</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;80.0;150.0;10.0;150.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3115</x>
      <y>1526</y>
      <w>511</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;710.0;10.0;710.0;220.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3745</x>
      <y>1680</y>
      <w>196</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Visitors.PatternVisitors::DecoratorVisitor
--
-visitor: IVisitor
--
+AdaptornVisitor(): ctor
+visitAll(ParsedDataStorage data): void
-setupMethodVisit(): void
-setupClassVisit(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3108</x>
      <y>1526</y>
      <w>742</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;1040.0;10.0;1040.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3626</x>
      <y>1785</y>
      <w>231</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;310.0;150.0;10.0;150.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>49</x>
      <y>1680</y>
      <w>238</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DataStorage.ParseClasses::NameRelationDecorator
--
- String arrowName
--
~getTo(): String
~getFrom(): String
+getArrowName() : String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>245</x>
      <y>1519</y>
      <w>259</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>350.0;10.0;10.0;10.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>189</x>
      <y>1505</y>
      <w>315</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;250.0;10.0;10.0;430.0;10.0</additional_attributes>
  </element>
</diagram>
