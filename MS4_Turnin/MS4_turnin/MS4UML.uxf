<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.1.1">
  <zoom_level>3</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1131</x>
      <y>0</y>
      <w>156</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DataStorage::IDataStorage
--
--
~getAbstractClasses(): Collection&lt;AbstractJavaClassRep&gt;
~getClasses(): Collection&lt;AbstractJavaClassRep&gt;
~getInterfaces(): Collection&lt;AbstractJavaClassRep&gt;
~getClass(String className): AbstractJavaClassRep
~getInterfacade(String interfaceName): AbstractJavaClassRep
~addMethod(String cName, AbstractData methodRep): void
~addField(String cName, AbstractData fieldRep): void
~addClass(String name, AbstractJavaClassRep classRep): void
~addAbstractClass(String name, AbstractJavaClassRep abstractClassRep): void
~addInterfaces(String name, AbstractJavaClassRep interfaceRep): void
~getMethods(): MethodCall[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1131</x>
      <y>102</y>
      <w>156</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>DataStorage::ParsedDataStorage
--
-storage: ParsedDataStorage
~classes: Map&lt;String, AbstractJavaClassRep&gt;
~interfaces: Map&lt;String, AbstractJavaClassRep&gt;
~abstractClasses: Map&lt;String, AbstractJavaClassRep&gt;
~usesRels: List&lt;IRelation&gt;
~associationRels: List&lt;IRelation&gt;
~methodCalls: List&lt;MethodCall&gt;
-max_depth = 5: int
--
-ParsedDataStorage(): ctor
+getInstance(): ParsedDataStorage
-destroySelf(): void
+getMax_depth(): int
+setMax_depth(int depth): void
+addClass(String name, AbstractJavaClassRep classRep): void
+getClass(String className): AbstractJavaClassRep
+addInterfaces(String name, AbstractJavaClassRep interfaceRep): void
+getMethods(): MethodCall[]
+addMethodCall(MethodCall mc): boolean
+getInterfacade(String interfaceName): AbstractJavaClassRep
+getClasses(): Collection&lt;AbstractJavaClassRep&gt;
+getInterfaces(): Collection&lt;AbstractJavaClassRep&gt;
+getAbstractClasses(): Collection&lt;AbstractJavaClassRep&gt;
+addMethod(String cName, AbstractData methodRep): void
+addField(String cName, AbstractData fieldRep): void
+addAbstractClass(String name, AbstractJavaClassRep abstractClassRep): void
+getAbstractClass(String className): AbstractJavaClassRep
+getInterface(String interfaceName): AbstractJavaClassRep
+getAssociationRels(): List&lt;IRelation&gt;
+getUsesRels(): List&lt;IRelation&gt;
+addUsesRelation(IRelation relation): boolean
+addAssociationRelation(IRelation relation): boolean
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>348</y>
      <w>216</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>ParseClasses::AbstractClassRep
--
--
+AbstractClassRep(String name, int accessibility): ctor
+AbstractClassRep(String name, int accessibility, String extendsClassName): ctor
+AbstractClassRep(String name, int accessibility, List&lt;String&gt; implementsName): ctor
+AbstractClassRep(String name, int accessibility, List&lt;String&gt; implementsName, String extendsClassName): ctor
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>669</x>
      <y>69</y>
      <w>156</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>/ParseClasses::AbstractData/
--
-name: String
-accessibility: int
-accessibilityTranslator = new HashMap&lt;Integer, String&gt;(): Map&lt;Integer, String&gt;
--
+AbstractData(String name, int accessibility): ctor
+getName(): String
+getAccessibility(): int
+getTranslatedAccessibility(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>702</x>
      <y>270</y>
      <w>243</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>/ParseClasses::AbstractExtendableClassRep/
--
-extendedClassName: String
--
+AbstractExtendableClassRep(String name, int accessibility): ctor
+AbstractExtendableClassRep(String name, int accessibility, List&lt;String&gt; implementsNames): ctor
+AbstractExtendableClassRep(String name, int accessibility, String extendedClassName): ctor
+AbstractExtendableClassRep(String name, int accessibility, List&lt;String&gt; implementsNames, String extendedClassName): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>816</x>
      <y>147</y>
      <w>177</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>/ParseClasses::AbstractJavaClassRep/
--
#methodsMap: Map&lt;String, AbstractData&gt;
#fieldsMap: Map&lt;String, AbstractData&gt;
-profileTags: List&lt;String&gt;
-implementsNames: List&lt;String&gt;
--
+AbstractJavaClassRep(String name, int accessibility): ctor
+AbstractJavaClassRep(String name, int accessibility, List&lt;String&gt; implementsNames): ctor
+addMethod(String methodName, AbstractData methodStructure): void
+getMethod(String methodName): AbstractData
+getMethodsMap(): Map&lt;String, AbstractData&gt;
+addField(String fieldName, AbstractData fieldRep): void
+getField(String fieldName): AbstractData
+getFieldsMap(): Map&lt;String, AbstractData&gt;
+addImplements(String interfaceName): void
+getImplementsList(): List&lt;String&gt;
+addProfileTag(String profile): void
+getProfileTags(): List&lt;String&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>567</x>
      <y>147</y>
      <w>126</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>/ParseClasses::AbstractTypable/
--
-type: String
--
+AbstractTypable(String name, int accessibility, String type): ctor
+getType(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>156</y>
      <w>96</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>ParseClasses::AssociationRelation
--
~from: String
~to: String
--
+AssociationRelation(String to, String from): ctor
+getTo(): String
+getFrom(): String
+accept(IVisitor v): void
+equals(Object o): boolean
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>348</y>
      <w>201</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>ParseClasses::ClassRep
--
-publicStaticGetInstatnce = false: boolean
-privateSingletonInit = false: boolean
-privateSingletonField = false: boolean
--
+ClassRep(String name, int accessibility): ctor
+ClassRep(String name, int accessibility, String extendsClassName): ctor
+ClassRep(String name, int accessibility, List&lt;String&gt; implementsName): ctor
+ClassRep(String name, int accessibility, List&lt;String&gt; implementsName, String extendsClassName): ctor
+accept(IVisitor v): void
+setPublicStaticGetInstatnce(boolean inst): void
+setPrivateSingletonInit(boolean inst): void
+setPrivateSingletonField(boolean inst): void
+isSingleton(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>438</x>
      <y>297</y>
      <w>147</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>ParseClasses::FieldRep
--
-className: String
--
+FieldRep(String name, int accessibility, String type, String className): ctor
+getClassName(): String
+getSimpleClassName(): String
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>966</x>
      <y>270</y>
      <w>141</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>ParseClasses::InterfaceRep
--
--
+InterfaceRep(String name, int accessibility): ctor
+InterfaceRep(String name, int accessibility, List&lt;String&gt; interfaces): ctor
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>81</x>
      <y>75</y>
      <w>51</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ParseClasses::IRelation
--
--
~getTo(): String
~getFrom(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>75</y>
      <w>207</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>ParseClasses::MethodCall
--
-fullClassName: String
-callingClass: String
-calledClass: String
-methodName: String
-args: String[]
-retType: String
--
+MethodCall(String callingClass, String calledClass, String methodName, String[] args, String retType): ctor
+getFullClassName(): String
+setFullClassName(String fullClassName): void
+GetCallingClass(): String
+GetCalledClass(): String
+GetMethodName(): String
+GetArgs(): String[]
+getRetType(): String
+acceptSequenceClass(SequenceVisitor methodVisitor, StringBuilder classes, StringBuilder methods): void
+equals(MethodCall method): boolean
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>438</x>
      <y>213</y>
      <w>153</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>ParseClasses::MethodRep
--
-usesRelations: List&lt;String&gt;
-className: String
--
+MethodRep(String name, int accessibility, String type, String className): ctor
+addUsesRelation(String className): void
+getUsesRelations(): List&lt;String&gt;
+getClassName(): String
+getSimpleClassName(): String
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>132</x>
      <y>156</y>
      <w>84</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>ParseClasses::UsesRelation
--
-from: String
-to: String
--
+UsesRelation(String to, String from): ctor
+getTo(): String
+getFrom(): String
+accept(IVisitor v): void
+equals(Object o): boolean
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>381</x>
      <y>726</y>
      <w>201</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>Visitors::ClassDeclarationVisitor
--
#className: String
--
+ClassDeclarationVisitor(int api, String className): ctor
+visit(int version, int access, String name, String signature, String superName, String[] interfaces): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>387</x>
      <y>651</y>
      <w>180</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Visitors::ClassFieldVisitor
--
#className: String
--
+ClassFieldVisitor(int api): ctor
+ClassFieldVisitor(int api, ClassVisitor decorated, String className): ctor
+visitField(int access, String name, String desc, String signature, Object value): FieldVisitor
-getInnermostClass(String someType): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1107</x>
      <y>489</y>
      <w>99</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>Visitors::DesignParser
--
--
+main(String[] args): void
-isMethodSignature(String className): boolean
-getGenerationType(String arg): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>717</x>
      <y>3</y>
      <w>45</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Visitors::ITraverser
--
--
~accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>921</x>
      <y>909</y>
      <w>60</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Visitors::IVisitMethod
--
--
~execute(ITraverser t): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>738</x>
      <y>804</y>
      <w>135</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Visitors::IVisitor
--
--
~preVisit(ITraverser t): void
~visit(ITraverser t): void
~postVisit(ITraverser t): void
~addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
~removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>921</x>
      <y>849</y>
      <w>111</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Visitors::LookupKey
--
~visitType: VisitType
~clazz: Class&lt;?&gt;
--
+LookupKey(VisitType visitType, Class&lt;?&gt; clazz): ctor
+equals(Object obj): boolean
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>651</x>
      <y>690</y>
      <w>99</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>Visitors.OutputStreams::SequenceOutputStream
--
-visitor: IVisitor
-classes: StringBuilder
-methods: StringBuilder
-visitedClasses: Set
--
+SequenceOutputStream(OutputStream out): ctor
+write(String m): void
+write(ParsedDataStorage storage): void
+setupClassVisit(): void
-addClass(String s, StringBuilder classes): void
-addMethod(MethodCall mc, StringBuilder sb): void
-appendArgs(String[] args, StringBuilder sb): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>690</y>
      <w>90</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>Visitors.OutputStreams::UMLOutputStream
--
-visitor: IVisitor
--
+UMLOutputStream(OutputStream out): ctor
-write(String m): void
+write(ParsedDataStorage storage): void
+setupVisitAbstractClass(): void
+setupVisitClass(): void
+setupVisitInterface(): void
+setupVisitMethod(): void
+setupVisitField(): void
+setupPrevisit(): void
+setupPostVisit(): void
+setupRelationVisit(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>873</x>
      <y>690</y>
      <w>84</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Visitors.PatternVisitors::SingletonVisitor
--
-visitor: IVisitor
--
+SingletonVisitor(): ctor
+visitAll(ParsedDataStorage data): void
-setupMethodVisit(): void
-setupMethodPostVisit(): void
-setupFieldVisit(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>81</x>
      <y>777</y>
      <w>255</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>Visitors.SequenceVisitors::SequenceClassMethodVisitor
--
~className: String
~desiredMethodName: String
~depth: int
--
+SequenceClassMethodVisitor(int api): ctor
+SequenceClassMethodVisitor(int api, ClassVisitor decorated, String className): ctor
+SequenceClassMethodVisitor(int api, ClassVisitor decorated, String className, String desiredMethodName, int currentDepth): ctor
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addReturnType(String desc): String
~addArguments(String desc): String[]
-getInnermostClass(String someType): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>111</x>
      <y>870</y>
      <w>198</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>Visitors.SequenceVisitors::SequenceMethodVisitor
--
-depth: int
-callingClassName: String
-fullCallingClassName: String
--
+SequenceMethodVisitor(int i, int depth): ctor
+SequenceMethodVisitor(int i, MethodVisitor methodVisitor, int depth, String callingClassName): ctor
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
-downTheRabbitHole(String fullCalledClassName, String desiredMethodName): void
-getCalledClass(String n): String
-getArgs(String desc): String[]
-getRetType(String desc, String mname): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>366</x>
      <y>777</y>
      <w>246</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>Visitors.UMLVisitors::UMLClassMethodVisitor
--
~className: String
~desiredMethodName: String
~depth: int
--
+UMLClassMethodVisitor(int api): ctor
+UMLClassMethodVisitor(int api, ClassVisitor decorated, String className): ctor
+UMLClassMethodVisitor(int api, ClassVisitor decorated, String className, String desiredMethodName, int currentDepth): ctor
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addReturnType(String desc): String
~addArguments(String desc): String[]
-getInnermostClass(String someType): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>402</x>
      <y>873</y>
      <w>168</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Visitors.UMLVisitors::UMLMethodVisitor
--
-callingClassName: String
-fullCallingClassName: String
--
+UMLMethodVisitor(int i): ctor
+UMLMethodVisitor(int i, MethodVisitor methodVisitor, String callingClassName): ctor
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
-getCalledClass(String n): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>738</x>
      <y>873</y>
      <w>135</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Visitors::Visitor
--
~keyToVisitMethodMap: Map&lt;LookupKey, IVisitMethod&gt;
--
+Visitor(): ctor
-doVisit(VisitType vType, ITraverser t): void
+preVisit(ITraverser t): void
+visit(ITraverser t): void
+postVisit(ITraverser t): void
+addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
+removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1206</x>
      <y>75</y>
      <w>9</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>249</x>
      <y>492</y>
      <w>99</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>DataStorage.Generation::GeneratorFactory
--
--
+GeneratorFactory(): ctor
+getGenerator(String generatorType): IGenerator
--
layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>444</x>
      <y>552</y>
      <w>84</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>DataStorage.Generation::GraphGenerator
--
--
+buildUMLClassDiagram(): String
+getOutputType(): String
+Generate(): String
+parse(List&lt;String&gt; args): void
--

layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>363</x>
      <y>489</y>
      <w>75</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DataStorage.Generation::IGenerator
--
--
~getOutputType(): String
~Generate(): String
~parse(List&lt;String&gt; args): void
--

layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>444</x>
      <y>588</y>
      <w>93</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>DataStorage.Generation::SequenceGenerator
--
--
+getOutputType(): String
+Generate(): String
+parse(List&lt;String&gt; args): void
--

layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>399</x>
      <y>525</y>
      <w>51</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0;150.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>399</x>
      <y>564</y>
      <w>51</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=.
layer=2</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0;150.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>345</x>
      <y>501</y>
      <w>24</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
layer=2</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>804</x>
      <y>849</y>
      <w>9</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>588</x>
      <y>177</y>
      <w>48</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;140.0;220.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>582</x>
      <y>240</y>
      <w>54</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>160.0;10.0;160.0;260.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>738</x>
      <y>27</y>
      <w>9</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>12</y>
      <w>387</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>1270.0;10.0;10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>102</x>
      <y>12</y>
      <w>243</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>790.0;10.0;10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>42</x>
      <y>105</y>
      <w>69</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;210.0;70.0;10.0;70.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>102</x>
      <y>123</y>
      <w>84</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;260.0;10.0;260.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>627</x>
      <y>120</y>
      <w>126</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>400.0;10.0;400.0;50.0;10.0;50.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>744</x>
      <y>132</y>
      <w>177</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;570.0;10.0;570.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>867</y>
      <w>57</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>170.0;10.0;80.0;10.0;80.0;100.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>891</x>
      <y>894</y>
      <w>36</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>100.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>477</x>
      <y>756</y>
      <w>9</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>213</x>
      <y>765</y>
      <w>273</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>890.0;10.0;10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>477</x>
      <y>693</y>
      <w>9</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>843</y>
      <w>9</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>213</x>
      <y>843</y>
      <w>9</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>813</x>
      <y>243</y>
      <w>93</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;290.0;50.0;10.0;50.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>897</x>
      <y>255</y>
      <w>147</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;470.0;10.0;470.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>729</x>
      <y>309</y>
      <w>90</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>280.0;10.0;280.0;50.0;10.0;50.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>810</x>
      <y>321</y>
      <w>162</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;520.0;10.0;520.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>696</x>
      <y>762</y>
      <w>117</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>370.0;140.0;370.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>804</x>
      <y>735</y>
      <w>117</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;230.0;10.0;180.0;370.0;180.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>804</x>
      <y>768</y>
      <w>9</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>474</x>
      <y>600</y>
      <w>114</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>210.0;10.0;360.0;10.0;360.0;120.0;10.0;120.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>573</y>
      <w>63</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0;190.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>534</x>
      <y>606</y>
      <w>174</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;560.0;10.0;560.0;280.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>558</y>
      <w>288</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;940.0;10.0;940.0;440.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>804</x>
      <y>558</y>
      <w>117</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;10.0;370.0;440.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>435</x>
      <y>501</y>
      <w>678</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;2240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1152</x>
      <y>279</y>
      <w>9</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;700.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>990</x>
      <y>180</y>
      <w>147</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;470.0;10.0</additional_attributes>
  </element>
</diagram>
